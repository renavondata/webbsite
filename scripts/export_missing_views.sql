-- Missing Views from Local Database
-- These views exist in local but not in remote Render PostgreSQL
-- Generated by compare_databases.py

-- View 1: enigma.listedcoshk
-- Lists currently listed companies on HK exchanges (Main Board=1, GEM=20, REITs=23)
CREATE OR REPLACE VIEW enigma.listedcoshk AS
SELECT DISTINCT issue.issuer,
    stocklistings.stockexid
FROM enigma.issue
JOIN enigma.stocklistings ON issue.id1 = stocklistings.issueid
WHERE (stocklistings.stockexid = ANY (ARRAY[1, 20, 23]))
  AND (issue.typeid <> ALL (ARRAY[1, 2, 40, 41, 46]))
  AND (stocklistings.firsttradedate IS NULL OR stocklistings.firsttradedate <= now())
  AND (stocklistings.delistdate IS NULL OR stocklistings.delistdate > now());

-- View 2: enigma.listedcoshkever
-- Lists all companies ever listed on HK exchanges (including delisted)
CREATE OR REPLACE VIEW enigma.listedcoshkever AS
SELECT issue.issuer,
    MIN(stocklistings.firsttradedate) AS firsttrade
FROM enigma.issue
JOIN enigma.stocklistings ON issue.id1 = stocklistings.issueid
WHERE (stocklistings.stockexid = ANY (ARRAY[1, 20, 23]))
  AND (issue.typeid = ANY (ARRAY[0, 6, 7, 10, 42]))
GROUP BY issue.issuer;

-- View 3: enigma.webholders3
-- Detailed shareholdings with holder information (from sholdings table)
CREATE OR REPLACE VIEW enigma.webholders3 AS
SELECT sh.issueid AS issue,
    sh.holderid AS personid,
    sh.atdate AS holdingdate,
    sh.shares,
    sh.stake,
    CASE
        WHEN pe.personid IS NOT NULL THEN 'P'::text
        WHEN o.personid IS NOT NULL THEN 'O'::text
        ELSE NULL::text
    END AS persontype,
    COALESCE(
        CASE
            WHEN pe.personid IS NOT NULL THEN pe.name1::text || COALESCE(', '::text || pe.name2::text, ''::text)
            ELSE NULL::text
        END, o.name1::text) AS name,
    o.orgtype,
    o.domicile,
    d.a2,
    d.friendly,
    o.incdate,
    o.incacc,
    i.typeid AS sectype,
    st.typeshort,
    st.typelong
FROM enigma.sholdings sh
LEFT JOIN enigma.people pe ON sh.holderid = pe.personid
LEFT JOIN enigma.organisations o ON sh.holderid = o.personid
LEFT JOIN enigma.domiciles d ON o.domicile = d.id
JOIN enigma.issue i ON sh.issueid = i.id1
LEFT JOIN enigma.sectypes st ON i.typeid = st.typeid
WHERE sh.heldas = 0;

-- View 4: enigma.webholdings3
-- Shareholdings grouped by holder (from sholdings table)
CREATE OR REPLACE VIEW enigma.webholdings3 AS
SELECT sh.holderid AS personid,
    sh.issueid AS issue,
    sh.atdate AS holdingdate,
    sh.shares,
    sh.stake,
    i.issuer,
    i.typeid AS sectype,
    st.typeshort,
    st.typelong,
    o.name1 AS name,
    o.orgtype,
    d.a2,
    d.friendly,
    o.incdate,
    o.incacc
FROM enigma.sholdings sh
JOIN enigma.issue i ON sh.issueid = i.id1
JOIN enigma.organisations o ON i.issuer = o.personid
LEFT JOIN enigma.sectypes st ON i.typeid = st.typeid
LEFT JOIN enigma.domiciles d ON o.domicile = d.id
WHERE sh.heldas = 0;
